---
import '../styles/global.css';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

// Props que el layout puede recibir de cada p√°gina
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="es" class="scroll-smooth">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<title>{title}</title>

		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap" rel="stylesheet">
        
        <script src="https://kit.fontawesome.com/d707748c4f.js" crossorigin="anonymous" is:inline></script>
	</head>
	<body>
        <Header />
		<main>
            <slot />
		</main>
        <Footer />

        <script>
            document.addEventListener("DOMContentLoaded", () => {
                const elementsToAnimate = document.querySelectorAll('.animate-on-scroll');
                const observer = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            const animationClasses = entry.target.dataset.animation.split(' ');
                            entry.target.classList.add(...animationClasses);
                            observer.unobserve(entry.target);
                        }
                    });
                }, { threshold: 0.15 });
                elementsToAnimate.forEach(element => { observer.observe(element); });
            });
        </script>
	</body>
</html>